// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id       Int       @id @default(autoincrement())
  name     String
  email    String    @unique
  password String

  // Relations
  comments Comment[]
  likes    Like[]
}

model Comment {
  id        Int        @id @default(autoincrement())
  text      String
  timestamp DateTime   @default(now())
  likes     Int        @default(0)

  // Self-relation for nested comments
  parentId  Int?
  parent    Comment?   @relation("CommentToChildren", fields: [parentId], references: [id])
  children  Comment[]  @relation("CommentToChildren")

  // Relation with User (author)
  authorId  Int
  author    User       @relation(fields: [authorId], references: [id])

  // Users who liked this comment
  likedBy   Like[]
}

// Join table for "likes" (who liked which comment)
model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  commentId Int

  user      User     @relation(fields: [userId], references: [id])
  comment   Comment  @relation(fields: [commentId], references: [id])

  @@unique([userId, commentId]) // one like per user per comment
}